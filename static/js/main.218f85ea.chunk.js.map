{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","document","getElementById"],"mappings":"+MAEe,SAASA,EAAYC,GAAQ,IAExCC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,eACAC,EACEL,EADFK,OAEF,OACE,6BACE,2BAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQI,SAAUL,IAChE,4BAAQI,MAAON,EAAkBO,SAAUN,GACxCF,EAAgBS,KAAI,SAAAC,GAAM,OACzB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,QCT/C,IAAME,EAAW,yCA0EFC,MAvEf,WAAgB,IASVC,EAAUC,EATD,EACiCC,mBAAS,IAD1C,mBACNhB,EADM,KACWiB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNZ,EALM,KAKEoB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KAiDb,OAvCID,GACFV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAEzBK,qBAAU,WACTC,MAAMhB,GACLiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC7CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE3B,IAEHN,qBAAU,WACa,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAE7C,CAACF,EAAcE,IAejB,oCACC,uCACD,kBAACtB,EAAD,CACCE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAAAoC,GAAC,OAAInB,EAAgBmB,EAAEC,OAAOhC,QAChDJ,eAlBF,SAAgCmC,GAC/Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAwB,IAiBvBtB,OAAQW,IAET,yBAAKT,UAAU,UAAf,KACA,kBAACR,EAAD,CACEE,gBAAiBA,EAClBC,iBAAkBmB,EAClBlB,iBAAkB,SAAAoC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOhC,QAC9CJ,eArBF,SAA8BmC,GAC7Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAwB,IAoBvBtB,OAAQU,MCrEX0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.218f85ea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CurrencyRow(props) {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    onChangeAmount,\r\n    amount\r\n  } = props\r\n  return (\r\n    <div>\r\n      <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount} />\r\n      <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n        {currencyOptions.map(option => (\r\n          <option key={option} value={option}>{option}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  )\r\n}","import React, { useEffect , useState} from 'react';\nimport './App.css';\nimport './CurrencyRow';\nimport CurrencyRow from './CurrencyRow';\n\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\t\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\tuseEffect(() => {\n\t\tfetch(BASE_URL)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconst firstCurrency = Object.keys(data.rates)[0]\n\t\t\t setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n\t\t\t setFromCurrency(data.base)\n\t\t\t setToCurrency(firstCurrency)\n\t\t\t setExchangeRate(data.rates[firstCurrency])\n\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n\t}, [fromCurrency, toCurrency])\n\t\n\n\tfunction handleFromAmountChange(e) {\n\t\tsetAmount(e.target.value)\n\t\tsetAmountInFromCurrency(true)\n\t}\n\n\tfunction handleToAmountChange(e) {\n\t\tsetAmount(e.target.value)\n\t\tsetAmountInFromCurrency(false)\n\t}\n\n\n  return (\n\t\t<>\n   <h1>Convert</h1>\n\t <CurrencyRow \n\t\t currencyOptions={currencyOptions}\n\t\t selectedCurrency={fromCurrency}\n\t\t onChangeCurrency={e => setFromCurrency(e.target.value)}\n\t\t onChangeAmount={handleFromAmountChange}\n\t\t amount={fromAmount}\n\t />\n\t <div className=\"equals\">=</div>\n\t <CurrencyRow \n\t\t  currencyOptions={currencyOptions}\n\t\t\tselectedCurrency={toCurrency}\n\t\t\tonChangeCurrency={e => setToCurrency(e.target.value)}\n\t\t\tonChangeAmount={handleToAmountChange}\n\t\t\tamount={toAmount}\n\t />\n  </>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}